pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Maven is building your code...'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests with JavaUnit...'
                echo 'Running integration tests with Selenium...'
            }
            post {
                success {
                    script {
                        def buildLogs = currentBuild.rawBuild.getLog(100).join('\n')
                        emailext to: "disadimethasa@gmail.com",
                                 subject: "Unit and Integration Tests Success - Build # ${currentBuild.number}",
                                 body: "The unit and integration tests have completed successfully. Build logs are attached.",
                                 attachmentsPattern: '**/build/*.log'
                    }
                }
                failure {
                    script {
                        def buildLogs = currentBuild.rawBuild.getLog(100).join('\n')
                        emailext to: "disadimethasa@gmail.com",
                                 subject: "Unit and Integration Tests Failure - Build # ${currentBuild.number}",
                                 body: "The unit and integration tests have failed. Build logs are attached.",
                                 attachmentsPattern: '**/build/*.log'
                    }
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code quality with SonarQube...'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Scanning for vulnerabilities with SAST scanner...'
            }
            post {
                success {
                    script {
                        def buildLogs = currentBuild.rawBuild.getLog(100).join('\n')
                        emailext to: "disadimethasa@gmail.com",
                                 subject: "Security Scan Success - Build # ${currentBuild.number}",
                                 body: "The security scan has completed successfully. Build logs are attached.",
                                 attachmentsPattern: '**/build/*.log'
                    }
                }
                failure {
                    script {
                        def buildLogs = currentBuild.rawBuild.getLog(100).join('\n')
                        emailext to: "disadimethasa@gmail.com",
                                 subject: "Security Scan Failure - Build # ${currentBuild.number}",
                                 body: "The security scan has failed. Build logs are attached.",
                                 attachmentsPattern: '**/build/*.log'
                    }
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying application to staging server using AWS...'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging environment...'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying application to production server using AWS tools...'
            }
        }
    }
}
