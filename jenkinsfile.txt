pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                echo 'Maven is building your code...'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests with JavaUnit...'
                echo 'Running integration tests with Selenium...'
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code quality with SonarQube...'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Scanning for vulnerabilities with SAST scanner...'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying application to staging server using AWS...'
            }
        }
    }

    post {
        always {
            script {
                try {
                    // Capture the last 1000 lines of the build log
                    def logFile = "build-log-${currentBuild.number}.txt"
                    def logContent = currentBuild.rawBuild.getLog(1000).join("\n")

                    // Write the log to a file
                    writeFile file: logFile, text: logContent

                    // Archive the log file in Jenkins
                    archiveArtifacts artifacts: logFile

                    // Send an email with the log file attached
                    emailext(
                        to: 'disadimethasa@gmail.com',
                        subject: "Pipeline ${currentBuild.currentResult} - Build #${currentBuild.number}",
                        body: "The pipeline has completed with result: ${currentBuild.currentResult}. Please find the build logs attached.",
                        attachmentsPattern: logFile
                    )
                } catch (Exception e) {
                    echo "Error occurred while trying to capture and email build logs: ${e.message}"
                }
            }
        }
    }
}
